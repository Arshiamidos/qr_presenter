package painter

import (
	"fmt"
	"image/color"
	"qr/utils"
)


func locateDarkPattern(v int) (int, int) {
	return (4 * v) + 9, 8
}
func Clear() {

}
func AddFinderPattern() {

}
func AddSepratorPattern() {

}
func AddAlignmentPattern() {

}
func AddTimingPattern() {

}
func AddDarkModule() {

}

func Reserve_VersionInformationArea_FormatInformationArea(v int) {

}
func CalcPenalties() {

}
func CalcPenalty_1() {}
func CalcPenalty_2() {}
func CalcPenalty_3() {}
func CalcPenalty_4() {}

func PaintV(v int) {
	V := utils.QrSize(v)
	boom := NewBoom(V*10, V*10)
	brush := NewBrush(50, 50)
	boom.SetBrush(&brush)
	boom.Draw(0, 0)
	boom.Draw(50, 50)
	boom.Draw(100, 100)
	boom.Draw(150, 150)
	brush.ChangeColor(color.RGBA{255,255,0,255})
	boom.Draw(200, 200)
	boom.SaveBoom()
	fmt.Println(V)

}
